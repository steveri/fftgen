//
//--------------------------------------------------------------------------------
//          THIS FILE WAS AUTOMATICALLY GENERATED BY THE GENESIS2 ENGINE        
//  FOR MORE INFORMATION: OFER SHACHAM (CHIP GENESIS INC / STANFORD VLSI GROUP)
//    !! THIS VERSION OF GENESIS2 IS NOT FOR ANY COMMERCIAL USE !!
//     FOR COMMERCIAL LICENSE CONTACT SHACHAM@ALUMNI.STANFORD.EDU
//--------------------------------------------------------------------------------
//
//  
//	-----------------------------------------------
//	|            Genesis Release Info             |
//	|  $Change: 11904 $ --- $Date: 2013/08/03 $   |
//	-----------------------------------------------
//	
//
//  Source file: /nobackup/steveri/github/fftgen/rtl/fpu.vp
//  Source template: fpu
//
// --------------- Begin Pre-Generation Parameters Status Report ---------------
//
//	From 'generate' statement (priority=5):
// Parameter op 	= sub
//
//		---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----
//
//	From Command Line input (priority=4):
//
//		---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----
//
//	From XML input (priority=3):
//
//		---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----
//
//	From Config File input (priority=2):
//
// ---------------- End Pre-Generation Pramameters Status Report ----------------

// Copyright 2019, all rights reserved.
// See below (end of file) for extended copyright information.
//
// ---------------- Begin default Genesis2 parameter summary ----------------
// whose_fpu (_GENESIS2_DECLARATION_PRIORITY_) = sr
//
// op (_GENESIS2_INHERITANCE_PRIORITY_) = sub
//
// ---------------- End default Genesis2 parameter summary ----------------

////////////////////////////////////////////////////////////////////////
// module fpu_unq1
//
// Usage: fpu(a, b, z)
//
//   z = f(a,b) (single precision floating-point)

module fpu_unq1 (
  input  logic [31:0] a,
  input  logic [31:0] b,
  output logic [31:0] z
  );

    `ifndef SRSUB_TEST
        addsub FPU (.op(1'b1), .a(a), .b(b), .z(z));
    `else
        // FIXME really? is this the best place for this???
        wire [31:0] z1; wire [31:0] z2; wire [31:0] z3; wire [31:0] z4;
        srsub SUB41(.op(1'b1), .a($shortrealtobits(4.0)), .b($shortrealtobits(1.0)), .z(z1));
        srsub SUB43(.op(1'b1), .a($shortrealtobits(4.0)), .b($shortrealtobits(3.0)), .z(z2));
        srsub SUB14(.op(1'b1), .a($shortrealtobits(1.0)), .b($shortrealtobits(4.0)), .z(z3));
        srsub SUB34(.op(1'b1), .a($shortrealtobits(3.0)), .b($shortrealtobits(4.0)), .z(z4));
        assign z = z1|z2|z3|z4;
    `endif


endmodule
//////////////////////////////////////////////////////////////////////////////
// Copyright Stephen Richardson and Stanford University.  All rights reserved.
//              Exclusively Licensed by Chip Genesis Inc.
//
// The code, the algorithm, or any part of it is not to be copied/reproduced.
// The code, the algorithm, or results from running this code may not be used
// for any commercial use unless legally licensed.
//
// For more information please contact
//   Ofer Shacham (Stanford Univ./Chip Genesis)   shacham@alumni.stanford.edu
//   Professor Mark Horowitz (Stanford Univ.)     horowitz@stanford.edu
//
// Genesis2 is patent pending. For information regarding the patent please
// contact the Stanford Technology Licensing Office.
///////////////////////////////////////////////////////////////////////////////
