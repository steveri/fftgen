//
//--------------------------------------------------------------------------------
//          THIS FILE WAS AUTOMATICALLY GENERATED BY THE GENESIS2 ENGINE        
//  FOR MORE INFORMATION: OFER SHACHAM (CHIP GENESIS INC / STANFORD VLSI GROUP)
//    !! THIS VERSION OF GENESIS2 IS NOT FOR ANY COMMERCIAL USE !!
//     FOR COMMERCIAL LICENSE CONTACT SHACHAM@ALUMNI.STANFORD.EDU
//--------------------------------------------------------------------------------
//
//  
//	-----------------------------------------------
//	|            Genesis Release Info             |
//	|  $Change: 11904 $ --- $Date: 2013/08/03 $   |
//	-----------------------------------------------
//	
//
//  Source file: /nobackup/steveri/github/fftgen/rtl/butterfly.vp
//  Source template: butterfly
//
// --------------- Begin Pre-Generation Parameters Status Report ---------------
//
//	From 'generate' statement (priority=5):
// Parameter op_type 	= TEST5
// Parameter op_width 	= 32
//
//		---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----
//
//	From Command Line input (priority=4):
//
//		---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----
//
//	From XML input (priority=3):
//
//		---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----
//
//	From Config File input (priority=2):
//
// ---------------- End Pre-Generation Pramameters Status Report ----------------

// Copyright 2013, all rights reserved.
// See below (end of file) for extended copyright information.
//
// ---------------- Begin default Genesis2 parameter summary ----------------
// op_width (_GENESIS2_INHERITANCE_PRIORITY_) = 32
//
// op_type (_GENESIS2_INHERITANCE_PRIORITY_) = TEST5
//
// ---------------- End default Genesis2 parameter summary ----------------


////////////////////////////////////////////////////////////////////////
// module butterfly_unq1
//
// Usage: butterfly(op_width, op_type)
//
//   op_width is total width of each operand (e.g. 64b for 32b each real + imaginary)
//   op_type is "float", "fix", "complex float", "complex fix", "TEST0", "TEST1", ...

module butterfly_unq1
    (
     input logic fftclk,
     input logic ready,

     input logic [63:0] in1,
     input logic [63:0] in2,
 
     input logic [31:0] twc, // twiddle (cos)
     input logic [31:0] tws, // twiddle (sin)

     output logic [63:0] out1,
     output logic [63:0] out2
    );



   logic [31:0] t1;
   logic [31:0] t1a;
   logic [31:0] t1b;
   
   logic [31:0] t2;
   logic [31:0] t2a;
   logic [31:0] t2b;

/* Wass iss?
   logic [7:0] status_t1;
   logic [7:0] status_t1a;
   logic [7:0] status_t1b;

   logic [7:0] status_t2;
   logic [7:0] status_t2a;
   logic [7:0] status_t2b;

   logic [7:0] status_o1r;
   logic [7:0] status_o1i;
   logic [7:0] status_o2r;
   logic [7:0] status_o2i;
*/


   ////////////////////////////////////////////////////////////////////////
   // $t1 = $c * $in2_real - $s * $in2_imag
     // $t1 = $t1a - $t1b
     // $t1a = $c * $in2_real
     // $t1b = $s * $in2_imag


     fpu_unq1  sub_t1 (.a(t1a), .b(t1b), .z(t1));
     fpu_unq2  mult_t1a (.a(twc), .b(in2[63:32]), .z(t1a));
     fpu_unq2  mult_t1b (.a(tws), .b(in2[31: 0]), .z(t1b));

   ////////////////////////////////////////////////////////////////////////
   // $t2 = $s * $in2_real + $c * $in2_imag;
     // $t2  = $t2a + $t2b;
     // $t2a = $s * $in2_real;
     // $t2b = $c * $in2_imag;


     fpu_unq3  add_t2 (.a(t2a), .b(t2b), .z(t2));
     fpu_unq2  mult_t2a (.a(tws), .b(in2[63:32]), .z(t2a));
     fpu_unq2  mult_t2b (.a(twc), .b(in2[31: 0]), .z(t2b));

   ////////////////////////////////////////////////////////////////////////

     // $out1_real = $in1_real + $t1;
     // $out1_imag = $in1_imag + $t2;
     // $out2_real = $in1_real - $t1;
     // $out2_imag = $in1_imag - $t2;


     fpu_unq3  add_o1r (.a(in1[63:32]), .b(t1), .z(out1[63:32]));
     fpu_unq3  add_o1i (.a(in1[31: 0]), .b(t2), .z(out1[31: 0]));
     fpu_unq1  sub_o2r (.a(in1[63:32]), .b(t1), .z(out2[63:32]));
     fpu_unq1  sub_o2i (.a(in1[31: 0]), .b(t2), .z(out2[31: 0]));


   ////////////////////////////////////////////////////////////////////////

   always @(fftclk) if (ready) begin
      // #2
      $display("%m t5 ------------------------");
      $display("%m t5 %5d: in1(r,i)= (bsr'%08X,bsr'%08X)", $time, in1[63:32], in1[31: 0]);
      $display("%m t5 %5d: in2(r,i)= (bsr'%08X,bsr'%08X)", $time, in2[63:32], in2[31: 0]);
      $display("%m t5");
      $display("%m t5 %5d: t1  = bsr'%08X",     $time, t1);
      $display("%m t5 %5d: t1a = bsr'%08X",     $time, t1a);
      $display("%m t5 %5d: t1b = bsr'%08X",     $time, t1b);
      $display("%m t5");
      $display("%m t5 %5d: t2  = bsr'%08X",     $time, t2);
      $display("%m t5 %5d: t2a = bsr'%08X",     $time, t2a);
      $display("%m t5 %5d: t2b = bsr'%08X",     $time, t2b);
      $display("%m t5");

      $display("%m t5 %5d: out1(r,i)= (in1_real+t1, in1_imag+t2) = (bsr'%08X,bsr'%08X)",
        $time, out1[63:32], out1[31: 0]);
      $display("%m t5 %5d: out2(r,i)= (in1_real-t1, in1_imag-t2) = (bsr'%08X,bsr'%08X)",
        $time, out2[63:32], out2[31: 0]);
      $display("%m t5 ------------------------");
   end

endmodule

/////////////////////////////////////////////////////////////////////////////////
// MIT License
// 
// Copyright (c) 2013 Stephen E. Richardson and Stanford University
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IM-
// PLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNEC-
// TION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
// 
// For more information please contact
// Stephen E. Richardson  steveri@stanford.edu (Stanford University)
// Prof. Mark Horowitz   horowitz@stanford.edu (Stanford University)
/////////////////////////////////////////////////////////////////////////////////
