// Copyright 2013, all rights reserved.
// See below (end of file) for extended copyright information.
//
// Description:
//
// fftclock #(DIV) (clock_in, clock_out)
//
// Given input clock signal "clock_in", divide the clock by
// parameter DIV and produce resulting slower clock "clock_out".

//; my $DIV = parameter(Name=>'DIV', Val=>1, Min=>1, Step=>1,
//; 			       Doc=>'clock_out = clock_in/DIV');

module `mname` // fftclock
  (input        clock_in,
   output logic clock_out);
   
//;##############################################################################
//; if ($DIV == 1) {
   // (DIV==1) => (clock_out == clock_in)
   assign clock_out = clock_in;
//; }
//;##############################################################################
//; elsif ($DIV == 2) {
   // (DIV==2) => (clock_out = clock_in/2) using simple toggle.

   initial begin
      clock_out = 1'b0;
      $display("\n`mname`.v: clock_out=0\n");
   end
   
   always @(posedge clock_in) begin
      clock_out = ~clock_out;
      $display("                                  `mname`.v: clock_out=%1d", clock_out);
   end
//;##############################################################################
//; } else {
   //; # DIV={4,8,16...} => DIV/2={2,4,8...} => dw={0,1,2...}
   //; my $DIV_WIDTH = 1; while (2**$DIV_WIDTH != ($DIV/2)) { $DIV_WIDTH++; }
   
   // (DIV > 2) => (clock_out = clock_in/DIV) using a counter.

   logic [0:`$DIV_WIDTH-1`] count;
   
   initial begin
      $display("\n`mname`.v: Initialize count=0, clock_out=0\n");
      count = 0;
      clock_out = 1'b0;
   end
   
   always @(posedge clock_in) begin
      if (count == 0) begin clock_out = ~clock_out; end
      $display("                                  `mname`.v: count=%1d, clock_out=%1d", count, clock_out);
      count++;
   end
//; }

endmodule



/////////////////////////////////////////////////////////////////////////////////
// MIT License
// 
// Copyright (c) 2013 Stephen E. Richardson and Stanford University
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IM-
// PLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNEC-
// TION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
// 
// For more information please contact
// Stephen E. Richardson  steveri@stanford.edu (Stanford University)
// Prof. Mark Horowitz   horowitz@stanford.edu (Stanford University)
/////////////////////////////////////////////////////////////////////////////////
