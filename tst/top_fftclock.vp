// Copyright 2013, all rights reserved.
// See below (end of file) for extended copyright information.
//
//; my $gclock = generate
//;    ('clock','GCLK',
//;     CLK_PERIOD=>1000, # 5 ns clock period
//;     RST_PERIOD=>  20, # Currently not used
//;     MAX_CYCLES=>  16  # End simulation after 16 cycles
//; );

//; my $lclock1 = generate('fftclock','LCLK1', DIV=>1); # Divide by two
//; my $lclock2 = generate('fftclock','LCLK2', DIV=>2); # Divide by two
//; my $lclock4 = generate('fftclock','LCLK4', DIV=>4); # Divide by two

module `mname`
  ();
   wire gclk, reset;
   //wire lclk;
   wire lclk1, lclk2, lclk4;

   // clock GCLK(.clk(clk), .reset(reset));

   `$gclock->instantiate()`(.clk(gclk), .reset(reset));

//;#   `$lclock->instantiate()`(.clock_in(gclk), .clock_out(lclk));

   `$lclock1->instantiate()`(.clock_in(gclk), .clock_out(lclk1));
   `$lclock2->instantiate()`(.clock_in(gclk), .clock_out(lclk2));
   `$lclock4->instantiate()`(.clock_in(gclk), .clock_out(lclk4));

endmodule
//////////////////////////////////////////////////////////////////////////////
// Copyright Stephen Richardson and Stanford University.  All rights reserved.
//              Exclusively Licensed by Chip Genesis Inc.
//
// The code, the algorithm, or any part of it is not to be copied/reproduced.
// The code, the algorithm, or results from running this code may not be used
// for any commercial use unless legally licensed.
//
// For more information please contact
//   Ofer Shacham (Stanford Univ./Chip Genesis)   shacham@alumni.stanford.edu
//   Professor Mark Horowitz (Stanford Univ.)     horowitz@stanford.edu
//
// Genesis2 is patent pending. For information regarding the patent please
// contact the Stanford Technology Licensing Office.
///////////////////////////////////////////////////////////////////////////////
