// Copyright 2013, all rights reserved.
// See below (end of file) for extended copyright information.
//
//; ########################################################################
//; # PARAMETERS cause default Genesist output to .v file
//; ########################################################################
// ---------------- Begin default Genesis2 parameter summary ----------------

//; my $nunits = parameter
//;    (Name=>'n_butterfly_units', Val=>4,
//;     Doc=>'Number of butterfly units.');
//; 
//; my $npoints = parameter
//;    (Name=>'n_fft_points', Val=>64,
//;     Doc=>'Number of complex data values to process.');
//;
//; ########################################################################
//;
// ---------------- End default Genesis2 parameter summary ----------------

//; my $fftram = generate
//;    ('fftram','fftram'
//;    , n_butterfly_units=>$nunits
//;    , n_fft_points     =>$npoints
//; );
//;
//;# //; my $nbanks = 4*$nunits;
//;# //; my $awidth = fftgen::log2($npoints);
//;# //; my $bwidth = fftgen::log2($nbanks);
//;# //; my $rwidth = fftgen::log2($npoints/$nbanks);

module `mname` ();

//;#    logic started;
//;#    logic [`$awidth-1`:0] addr;
//;#    logic [`$rwidth-1`:0] rnum;
//;#    logic [`$bwidth-1`:0] bnum;
//;#    
//;#    initial begin
//;#       $display("\nBEGIN");
//;#       started=0; addr = -1; #2 started = 1;
//;# 
//;#       //; for (my $i=0; $i<$npoints; $i += 4) {
//;#       //;     my $a0 = sprintf("%2d", $i+0);
//;#       //;     my $a1 = sprintf("%2d", $i+1);
//;#       //;     my $a2 = sprintf("%2d", $i+2);
//;#       //;     my $a3 = sprintf("%2d", $i+3);
//;#       #2 addr = `$a0`;    #2 addr = `$a1`;    #2 addr = `$a2`;    #2 addr = `$a3`;    #2 $display("");
//;#       //; }
//;# 
//;#       #1 $display("END\n");
//;#    end

   `$fftram->instantiate()`
     (                            //.remote(local)
//;#       .addr_i(addr),
//;#       .rnum_o(rnum),
//;#       .bnum_o(bnum)
      );

//;#    always @(addr) begin
//;#       if (started === 1) begin
//;#          #1 $display("   address %2d => bank %1d row %1d", addr, bnum, rnum);
//;#       end
//;#    end

endmodule

/////////////////////////////////////////////////////////////////////////////////
// MIT License
// 
// Copyright (c) 2013 Stephen E. Richardson and Stanford University
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IM-
// PLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNEC-
// TION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
// 
// For more information please contact
// Stephen E. Richardson  steveri@stanford.edu (Stanford University)
// Prof. Mark Horowitz   horowitz@stanford.edu (Stanford University)
/////////////////////////////////////////////////////////////////////////////////
